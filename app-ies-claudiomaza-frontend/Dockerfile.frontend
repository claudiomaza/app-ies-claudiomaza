# 1. Primera etapa: Construir la aplicación
# Usamos una imagen de Node.js para compilar el código de React/Angular/Vue
FROM node:18.19.0-alpine AS builder

# Establecemos el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copiamos el archivo de configuración de dependencias
# Esto es más eficiente, ya que Docker no tiene que reconstruir la capa si no hay cambios
COPY package*.json ./

# Instalamos las dependencias
RUN npm install

# Copiamos todos los archivos del proyecto al directorio de trabajo del contenedor
COPY . .

# Ejecutamos el comando de construcción. Esto crea la carpeta 'dist' o 'build'
RUN npm run build

# 2. Segunda etapa: Servir la aplicación con Nginx
# Usamos una imagen ligera de Nginx para servir los archivos estáticos
FROM nginx:alpine

# Copiamos la configuración personalizada de Nginx
# ¡Esta línea es la clave para que tu SPA funcione!
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copiamos los archivos de construcción de la primera etapa al directorio de Nginx
# Este es el paso clave que faltaba o estaba mal configurado
COPY --from=builder /app/dist /usr/share/nginx/html

# Expone el puerto 80 del contenedor, que es el que Nginx usa
EXPOSE 80

# El comando por defecto para iniciar Nginx
CMD ["nginx", "-g", "daemon off;"]
